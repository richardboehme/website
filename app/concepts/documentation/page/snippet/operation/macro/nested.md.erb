<%= h3 "Nested" %>

The `Nested` macro works identical to `Subprocess` when you pass an activity.

<%= code "nested", collapse: :meths %>

It will print a deprecation and use `Subprocess` internally, automatically wiring the nested's outputs (`Validate`) to the known outer tracks.

Anyhow, `Nested` allows for dynamically deciding the nested activity at run-time using an `:instance_method`, or any callable object.

<%= code "nested-dynamic", collapse: :meths %>

The dynamic nested decider method or callable has a task interface and must return the activity to nest. `Nested` will automatically connect the `failure` and the `success` end only.

<%= h4 "Auto-wire" %>

In order to connect all the ends of dynamically selected activity, you need to provide the list of all possible activities using `:auto_wire` option. You may use the wiring DSL with `Output` and friends to connect outputs from the nested activity.

<%= code "nested-with-auto-wire", collapse: :meths %>
